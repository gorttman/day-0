# FILE: roles/prep-rootfs/tasks/create_rootfs.yml
---
# Create a minimal Raspberry Pi OS (Debian Bookworm) root filesystem
# for NFS boot using debootstrap.

- name: Ensure debootstrap binary is available
  ansible.builtin.command:
    cmd: which debootstrap
  register: _check_debootstrap
  changed_when: false
  failed_when: _check_debootstrap.rc != 0

- name: Run debootstrap to create base root filesystem
  ansible.builtin.command:
    cmd: >
      debootstrap
      --arch={{ base_arch }}
      {{ base_os_release }}
      {{ staging_rootfs }}
      http://deb.debian.org/debian
  args:
    creates: "{{ staging_rootfs }}/etc/os-release"
  become: true

- name: Ensure /etc directory exists inside rootfs
  ansible.builtin.file:
    path: "{{ staging_rootfs }}/etc"
    state: directory
    mode: "0755"

- name: Write basic network interfaces configuration
  ansible.builtin.copy:
    dest: "{{ staging_rootfs }}/etc/network/interfaces"
    mode: "0644"
    content: |
      auto lo
      iface lo inet loopback

      auto eth0
      iface eth0 inet dhcp

- name: Configure DNS resolver
  ansible.builtin.copy:
    dest: "{{ staging_rootfs }}/etc/resolv.conf"
    mode: "0644"
    content: |
      nameserver 1.1.1.1
      nameserver 8.8.8.8

- name: Write minimal fstab placeholder
  ansible.builtin.copy:
    dest: "{{ staging_rootfs }}/etc/fstab"
    mode: "0644"
    content: |
      proc            /proc           proc    defaults          0       0
      sysfs           /sys            sysfs   defaults          0       0
      tmpfs           /tmp            tmpfs   defaults          0       0
      devpts          /dev/pts        devpts  gid=5,mode=620    0       0

- name: Copy qemu-user-static binary into rootfs for chroot compatibility
  ansible.builtin.command:
    cmd: cp /usr/bin/qemu-aarch64-static {{ staging_rootfs }}/usr/bin/
  args:
    creates: "{{ staging_rootfs }}/usr/bin/qemu-aarch64-static"
  become: true

- name: Prepare policy-rc.d to disable service autostart
  ansible.builtin.copy:
    dest: "{{ staging_rootfs }}/usr/sbin/policy-rc.d"
    mode: "0755"
    content: |
      #!/bin/sh
      exit 101
